nesus
paste("Choose the ESU number: \n 0. All ESUs\n",
paste(1:nesus, ". ", esu.names, collapse = "\n ",
sep = ""))
?readline
aa=readline("test")
aa
eval(paste("c(",aa,")")
)
evaluate(paste("c(",aa,")"))
?eval
get("c(1,2)")
eval(expression("c(1,2)"))
str_split(aa,",")
as.numeric(str_split(aa,","))
as.numeric(str_split(aa,",")[[1]])
as.numeric(str_split("3",",")[[1]])
c(1,3)%in%1:10
all(c(1,3)%in%1:10)
all(c(1,NA)%in%1:10)
library(NWCTrends)
NWCTrends_report()
?is.identical
?isEqual
?is.equal
?is.Equal
isEqual
is.Equal
??is.equal
??equal
library(NWCTrends)
NWCTrends_report()
library(NWCTrends)
NWCTrends_report()
library(NWCTrends)
NWCTrends_report()
library(NWCTrends)
NWCTrends_report()
NWCTrends_report(output.type="html")
library(NWCTrends)
NWCTrends_report(output.type="html")
NWCTrends_report()
library(NWCTrends)
library(NWCTrends)
NWCTrends_report(output.type="html")
library(NWCTrends)
NWCTrends_report(output.type="html")
library(NWCTrends)
library(NWCTrends)
library(NWCTrends)
NWCTrends_report(output.type="html")
library(NWCTrends)
NWCTrends_report(output.type="html")
library(NWCTrends)
library(NWCTrends)
NWCTrends_report(output.type="html")
D=diag(c(2,1,1))
P=matrix(c(1,2,0,3,1,2,1,-1,1),3,3)
P
P=matrix(c(1,2,0,3,1,2,1,-1,1),3,3,byrow=TRUE)
P
A=P%*%D%*%solve(P)
A
eigen(A)
A=solve(P)%*%D%*%P
eigen(A)
P=matrix(c(1,2,0,3,1,2,1,-1,1),3,3,byrow=TRUE)
P
D
A=solve(P)%*%D%*%P
A
eigen(A)
?eigen
?svn
?diagonalize
A=P%*%D%*%solve(P)
A
eigen(A)
P
aa=eigen(A)
aa$vectors/.3015113
P=matrix(c(1,2,0,3,1,2,1,-1,1),3,3,byrow=TRUE)
P
A=P%*%D%*%solve(P)
A
P=matrix(c(1,0,2,3,2,1,1,1,-1),3,3,byrow=TRUE)
P
A=P%*%D%*%solve(P)
A
eigen(A)
aa=eigen(A)$vectors
aa[,2]
aa[,2]-.2382557
(aa[,2]-.2382557)/.04720413
(aa[,2]/.2382557)
A
p
p=eigen(A)$vectors
d
d=diag(eigen(A)$values
)
d
p
p %*% d %*% solve(p)
A
A=matrix(c(1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,1),4,4,byrow=TRUE)
A
eigen(A)
d=diag(eigen(A)$values)
p=eigen(A)$vectors
p %*% d %*% solve(p) #should be A is A is diagonalizable
solve(p)
p
p
P=matrix(c(1,2,0,3,1,2,1,-1,1),3,3,byrow=TRUE)
D=diag(c(2,1,1))
A=P%*%D%*%solve(P)
eigen(A)
.2525898/2
alpha=.1262949
solve(matrix(c(2,1,0,2),2,2))
P[1:2,2,drop=FALSE]%*%solve(matrix(c(2,1,0,2),2,2))
P[1:2,2,drop=FALSE]
solve(matrix(c(2,1,0,2),2,2))
?eigen
solve(matrix(c(2,1,0,2),2,2))%*%P[1:2,2,drop=FALSE]
P
p=eigen(A)$vectors
solve(matrix(c(2,1,0,2),2,2))%*%p[1:2,2,drop=FALSE]
ab=solve(matrix(c(2,1,0,2),2,2))%*%p[1:2,2,drop=FALSE]
P[,2:3]%*%ab
p
ab
ab=solve(matrix(c(2,1,0,2),2,2))%*%p[1:2,3,drop=FALSE]
ab
P[,2:3]%*%ab
p
library(devtools)
devtools::install_github("nwfsc-timeseries/NWCTrends")
library(NWCTrends)
?NWCTrends
NWCTrends_report()
NWCTrends_report()
?RShowDoc
RShowDoc(*, package="NWCTrends")
RShowDoc("*", package="NWCTrends")
RShowDoc("", package="NWCTrends")
?system.file
system.file(package="NWCTrends")
system.file("doc",package="NWCTrends")
system.file("doc","demodata",package="NWCTrends")
fpath <- system.file("doc","demodata",package="NWCTrends")
dir(fpath)
fpath
file.choose(fpath)
dir("/Library/Frameworks/R.framework/Versions/3.5/Resources/library/NWCTrends")
file.choose(/Library/Frameworks/R.framework/Versions/3.5/Resources/library/NWCTrends")
file.choose("/Library/Frameworks/R.framework/Versions/3.5/Resources/library/NWCTrends")
file.choose("/Library/Frameworks/R.framework/Versions/3.5/Resources")
?file.choose
?NWCTrends
dir(fpath)
RShowDoc("doc/demodata/Lower_Columbia_River_Chinook.csv")
RShowDoc("doc/demodata/Lower_Columbia_River_Chinook.csv", package="NWCTrends")
?file.copy
?file.copy
?dir.create
fpath <- system.file("doc","demodata",package="NWCTrends")
dir()
file.copy(fpath, "demo")
file.copy(fpath, "demo")
file.copy(fpath, "demo",recursive=TRUE)
file.copy(fpath, ".",recursive=TRUE)
getwd()
library(NWCTrends)
setwd("~/")
setwd("C:\Users\Eli.Holmes\Desktop")
setwd("C:\\Users\\Eli.Holmes\\Desktop")
setwd("C:/Users/Eli.Holmes/Desktop/Neala")
library(NWCTrends)
NWCTrends_report()
?file.create
output.dir="NWCTrend_output"
dir.exists(output.dir)
dir.create(output.dir)
library(NWCTrends)
NWCTrends_report()
load("C:/Users/Eli.Holmes/Desktop/Neala/NWCTrend_output/NWCTrends_debug_file.RData")
par(mfrow=c(3,2))
#source("fracwild_tables.R")
total.spawners=matdat.spawners[esus==esuname,,drop=FALSE]
matdat.spawners=datalist$matdat.spawners
matdat.wildspawners=datalist$matdat.wildspawners
par(mfrow=c(3,2))
#source("fracwild_tables.R")
total.spawners=matdat.spawners[esus==esuname,,drop=FALSE]
matdat.spawners=datalist$matdat.spawners
matdat.wildspawners=datalist$matdat.wildspawners
esus=datalist$metadat$ESU
par(mfrow=c(3,2))
#source("fracwild_tables.R")
total.spawners=matdat.spawners[esus==esuname,,drop=FALSE]
head(datalist$dat)
esuname="Puget Sound Chinook Salmon ESU"
total.spawners=matdat.spawners[esus==esuname,,drop=FALSE]
wild.spawners=matdat.wildspawners[esus==esuname,,drop=FALSE]
a=fracwild_table(wild.spawners[pops.to.plot,,drop=FALSE], total.spawners[pops.to.plot,,drop=FALSE])
source('~/GitHub/NWCTrends/R/fracwild_tables.R')
a=fracwild_table(wild.spawners[pops.to.plot,,drop=FALSE], total.spawners[pops.to.plot,,drop=FALSE])
ifit.total = fits[[esuname]][[modn]]$fit
ifit.fracwild = fits[[esuname]][["fwlogitfit"]]
modn=1
ifit.total = fits[[esuname]][[modn]]$fit
ifit.fracwild = fits[[esuname]][["fwlogitfit"]]
pops.to.plot =  pops[
apply(ifit.total$model$data[,which(years==plot.min.year):which(years==plot.max.year),drop=FALSE],1,
function(x){sum(!is.na(x))>=min.data.points})]
pops = rownames(ifit.total$model$data)
mpg=metadat$PopGroup[metadat$name%in%pops]
pops.to.plot =  pops[
apply(ifit.total$model$data[,which(years==plot.min.year):which(years==plot.max.year),drop=FALSE],1,
function(x){sum(!is.na(x))>=min.data.points})]
years = as.numeric(colnames(ifit.total$model$data))
if(is.null(plot.min.year)) plot.min.year = years[1]
if(plot.min.year<years[1]) plot.min.year = years[1]
if(is.null(plot.max.year)) plot.max.year = max(years)
if(plot.max.year>max(years)) plot.max.year = max(years)
# Figure out the names of the populations to plot
# it's the row in total.fit where there are enough data points for the min to max year range
pops = rownames(ifit.total$model$data)
mpg=metadat$PopGroup[metadat$name%in%pops]
pops.to.plot =  pops[
apply(ifit.total$model$data[,which(years==plot.min.year):which(years==plot.max.year),drop=FALSE],1,
function(x){sum(!is.na(x))>=min.data.points})]
metadat=datalist$metadat
years = as.numeric(colnames(ifit.total$model$data))
if(is.null(plot.min.year)) plot.min.year = years[1]
if(plot.min.year<years[1]) plot.min.year = years[1]
if(is.null(plot.max.year)) plot.max.year = max(years)
if(plot.max.year>max(years)) plot.max.year = max(years)
plot.min.year=1980
plot.max.year=2014
years = as.numeric(colnames(ifit.total$model$data))
if(is.null(plot.min.year)) plot.min.year = years[1]
plot.min.year
years[1]
rm(plot.min.year)
rm(plot.max.year)
if(is.null(plot.min.year)) plot.min.year = years[1]
plot.min.year = years[1]
plot.min.year = years[1]
plot.max.year = max(years)
plot.max.year = max(years)
a=fracwild_table(wild.spawners[pops.to.plot,,drop=FALSE], total.spawners[pops.to.plot,,drop=FALSE])
pops.to.plot =  pops[
apply(ifit.total$model$data[,which(years==plot.min.year):which(years==plot.max.year),drop=FALSE],1,
function(x){sum(!is.na(x))>=min.data.points})]
min.data.points=5
pops.to.plot =  pops[
apply(ifit.total$model$data[,which(years==plot.min.year):which(years==plot.max.year),drop=FALSE],1,
function(x){sum(!is.na(x))>=min.data.points})]
pops.to.plot
a=fracwild_table(wild.spawners[pops.to.plot,,drop=FALSE], total.spawners[pops.to.plot,,drop=FALSE])
source('~/GitHub/NWCTrends/R/clean_pops.R')
a=fracwild_table(wild.spawners[pops.to.plot,,drop=FALSE], total.spawners[pops.to.plot,,drop=FALSE])
a
a[,5]
a[,1]
cut(as.numeric(as.character((a[,5]))),seq(0,1,.2)),exclude=NULL)
cut(as.numeric(as.character((a[,5]))),seq(0,1,.2))
table(cut(as.numeric(as.character((a[,5]))),seq(0,1,.2)),exclude=NULL)
barplot(table(cut(as.numeric(as.character((a[,5]))),seq(0,1,.2)),exclude=NULL),
names.arg=c(as.character(seq(0.1,.9,0.2)),"NA"),ylab="Count",
ylim=c(0,dim(a)[1]))
c(as.character(seq(0.1,.9,0.2)),"NA")
cut(c(1:10,NA),1:10)
table(cut(c(1:10,NA),1:10))
table(cut(c(1:10,NA),1:10),exclude=NULL)
barplot(table(cut(as.numeric(as.character((a[,5]))),seq(0,1,.2)),exclude=NULL),
names.arg=c(as.character(seq(0.1,.9,0.2))),ylab="Count",
ylim=c(0,dim(a)[1]))
?table
table(cut(as.numeric(as.character((a[,5]))),seq(0,1,.2)),exclude=NULL, useNA="always")
library(NWCTrends)
detach("package:NWCTrends", unload=TRUE)
library(NWCTrends)
NWCTrends_report()
NWCTrends_report()
min.years
min.years = 5
good=!(apply(matdat.spawners,1,function(x){sum(!is.na(x))})<min.years)
good
debug(NWCTrends::trend_fits)
debug(NWCTrends:::trend_fits)
NWCTrends_report()
good
fw
esus.sub
pops.sub
kemdat
as.matrix(kemdat)
fw
esu.sub
esus.sub
library(NWCTrends)
NWCTrends_report()
NWCTrends_report()
format(Sys.Date(), "%Y"))
format(Sys.Date(), "%Y")
library(MARSS)
?MARSS
source('~/.active-rstudio-document')
test()
test(a=5)
b=list(a=5,c=2)
test(a=5, ulist(b))
test(a=5, unlist(b))
test(a=5, a=5
)
do.call(test,c(list(a=5),b))
b=list(c=2)
do.call(test,c(list(a=5),b))
a=do.call(test,c(list(a=5),b))
a
source('~/.active-rstudio-document')
a=do.call(test,c(list(a=5),b))
a
do.call(test,c(list(a=5),b))
do.call(test,c(a=2,b))
do.call(test,c(a=2,b=1,b))
b=list(c=2,b=0)
do.call(test,c(a=2,b))
do.call(test,a=2,b)
b=list(c=2)
do.call(test,c(list(a=2,b=0),b))
library(NWCTrends)
library(NWCTrends)
library(NWCTrends)
library(NWCTrends)
library(NWCTrends)
library(NWCTrends)
library(NWCTrends)
library(NWCTrends)
NWCTrends:::geomean_table
library(NWCTrends)
2014-1990
(2014-1990)/5
ceiling(2014-1990)/5
?ceiling
ceiling((2014-1990)/5)
ceiling((2019-1999)/5)
((2019-1999)/5)
1994-1990
max.year=2019
min.year=1999
lenbands=5
seq(max.year-lenbands+1,min.year,-1*lenbands)
paste(rev(seq(max.year-lenbands+1,min.year,-1*lenbands)),
paste(rev(seq(max.year-lenbands+1,min.year,-1*lenbands)),
rev(seq(max.year,min.year+lenbands-1,-1*lenbands)),sep="-")
(2014-1990+1)/5
seq(min.year,max.year+lenbands-1,lenbands)
paste(seq(min.year,max.year,lenbands),
seq(min.year+lenbands-1,max.year+lenbands-1,lenbands),sep="-")
min.year=1998; max.year=2014
paste(seq(min.year,max.year,lenbands),
seq(min.year+lenbands-1,max.year+lenbands-1,lenbands),sep="-")
ceiling((max.year-min.year+1)/lenbands)
a=1:12
filter(a,rep(1,5),sides=1)
a
sum(a[1:5])
b=filter(a,rep(1,5),sides=1)
dat=a
dat0=dat
dat0[!is.na(dat0)]=1; dat0[is.na(dat0)]=0
dat0
not0 = filter(dat0, rep(1,lenbands), sides=1)
not0
seq(min.year+lenbands-1,max.year+lenbands-1,lenbands)
lenbands
max.year
max.year+lenbands-1
min.year+nbands*lenbands+1
nbands <- ceiling((max.year-min.year+1)/lenbands)
min.year+nbands*lenbands+1
min.year
max.year
paste(seq(min.year,max.year,lenbands),
seq(min.year+lenbands-1,max.year+lenbands-1,lenbands),sep="-")
min.year+nbands*lenbands-1
#make the year labels
start1 <- seq(min.year,max.year,lenbands)
end1 <- seq(min.year+lenbands-1,max.year+lenbands-1,lenbands)
end1[lenght(end1)] <- max.year
yrranges=paste(start1, end1, sep="-")
start1 <- seq(min.year,max.year,lenbands)
end1 <- seq(min.year+lenbands-1,max.year+lenbands-1,lenbands)
end1[length(end1)] <- max.year
paste(start1, end1, sep="-")
?filter
filter(1:12, rep(1,3), sides=3)
filter(1:12, rep(1,3), sides=2)
filter(1:12, rep(1,3), sides=1)
rev(filter(rev(1:12), rep(1,3), sides=1))
1:12
filter(c(1:12,NA,NA,NA), rep(1,5), sides=1)
filter(c(1:12,0,0,0), rep(1,5), sides=1)
filter(c(NA,1:12,NA), rep(1,5), sides=1)
library(NWCTrends)
library(NWCTrends)
library(NWCTrends)
library(NWCTrends)
library(NWCTrends)
library(NWCTrends)
library(NWCTrends)
?geomean_table
library(NWCTrends)
setwd("~/Desktop/Neala")
?NWCTrends_report
ls()
dir()
fil <- "Puget_Sound_Chinook.csv"
NWCTrends_report(inputfile=fil, fit.max.year=2019,
geomean.table.control=list(min.year=1999, max.year=2019,
change.col="first.last"),
trend.table.control=list(year.ranges=list(1999:2019)))
toproper
NWCTrends:::toproper("abc")
toproper = function(x){
require(stringr)
x=tolower(x)
x=stringr::str_replace_all(x, "[.]", " ")
x=stringr::str_replace_all(x, "_", " ")
out=c()
for(i in x){
s = strsplit(i, " ")[[1]]
s = paste(toupper(substring(s, 1, 1)), substring(s, 2),
sep = "", collapse = " ")
out = c(out, s)
}
out=stringr::str_replace_all(out, " ", ".")
out=stringr::str_replace_all(out, "Nwr", "NWR")
out=stringr::str_replace_all(out, "Esu", "ESU")
out
}
dat = read.csv(fil,header=TRUE,na.strings=c('-99','-99.00','-99.0'),stringsAsFactors=FALSE)
colnames(dat)
toproper(names(dat))
library(NWCTrends)
fil <- "Puget_Sound_Chinook.csv"
NWCTrends_report(inputfile=fil, fit.max.year=2019,
geomean.table.control=list(min.year=1999, max.year=2019,
change.col="first.last"),
trend.table.control=list(year.ranges=list(1999:2019)))
toproper("Species")
debug(NWCTrends:::data_setup)
fil <- "Puget_Sound_Chinook.csv"
NWCTrends_report(inputfile=fil, fit.max.year=2019,
geomean.table.control=list(min.year=1999, max.year=2019,
change.col="first.last"),
trend.table.control=list(year.ranges=list(1999:2019)))
toproper(required)
colnames(dat)
library(NWCTrends)
fil <- "Puget_Sound_Chinook.csv"
NWCTrends_report(inputfile=fil, fit.max.year=2019,
geomean.table.control=list(min.year=1999, max.year=2019,
change.col="first.last"),
trend.table.control=list(year.ranges=list(1999:2019)))
fil <- "Puget_Sound_Chinook.csv"
NWCTrends_report(inputfile="test.csv", fit.max.year=2019,
geomean.table.control=list(min.year=2009, max.year=2018,
change.col="first.last"),
trend.table.control=list(year.ranges=list(2009:2018)))
library(NWCTrends)
debug(NWCTrends:::trend_15_tables)
debug(NWCTrends:::trend_15_table)
fil <- "Puget_Sound_Chinook.csv"
NWCTrends_report(inputfile="test.csv", fit.max.year=2019,
geomean.table.control=list(min.year=2009, max.year=2018,
change.col="first.last"),
trend.table.control=list(year.ranges=list(2009:2018)))
nyr
1
plot(1)
save(pops, mpg, total.fit, fracwild.fit, year.ranges, file="test.RData")
debug(NWCTrends:::trend_15_table)
cc
TRUE & cc
TRUE && cc
if(TRUE && is.na(cc)) cat("1")
if(TRUE & is.na(cc)) cat("1")
TRUE | cc
TRUE || cc
library(NWCTrends)
fil <- "Puget_Sound_Chinook.csv"
NWCTrends_report(inputfile="test.csv", fit.max.year=2019,
geomean.table.control=list(min.year=2009, max.year=2018,
change.col="first.last"),
trend.table.control=list(year.ranges=list(2009:2018)))
dir()
fil="Upper_Columbia_steelhead.csv"
NWCTrends_report(inputfile=fil, fit.max.year=2019,
geomean.table.control=list(min.year=1999, max.year=2019,
change.col="first.last"),
trend.table.control=list(year.ranges=list(1999:2019)))
NWCTrends_report(inputfile=fil, fit.max.year=2019,
geomean.table.control=list(min.year=2009, max.year=2019,
change.col="first.last"),
trend.table.control=list(year.ranges=list(2009:2019)))
library(NWCTrends)
